[gd_scene load_steps=2 format=3 uid="uid://cucbym5ci80y2"]

[sub_resource type="GDScript" id="GDScript_eydrg"]
script/source = "extends Node2D

### Constants ###
# Constants for preload
const group = preload(\"res://scenes/enemy/red_drone/red_drone_group.tscn\")

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	if global_position == Vector2(0,0):
		setNewPosition()
		print(\"Current Coords: \" + str(global_position))
		spawn_red_drone_group()

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta: float) -> void:
	pass

### Functions for spawning logic ###
func spawn_red_drone_group() -> void:
	var g = group.instantiate()
	get_tree().current_scene.add_child(g)
	g.global_position = self.global_position
##
func setNewPosition() -> void:
	global_position = CameraObserver.get_random_spawn_position()

func _on_remove_self_timer_timeout() -> void:
	self.call_deferred(\"queue_free\")


func _on_spawning_timer_timeout() -> void:
	#spawn_red_drone_group()
	pass
"

[node name="RedDroneGroupSpawn" type="Node2D"]
script = SubResource("GDScript_eydrg")

[node name="RemoveSelfTimer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true
autostart = true

[node name="SpawningTimer" type="Timer" parent="."]
wait_time = 0.3
one_shot = true
autostart = true

[connection signal="timeout" from="RemoveSelfTimer" to="." method="_on_remove_self_timer_timeout"]
[connection signal="timeout" from="SpawningTimer" to="." method="_on_spawning_timer_timeout"]
